import disnake
from disnake.ext import commands

class SelectGames(disnake.ui.Select):
    def __init__(self):
        options = [
            disnake.SelectOption(label="Керри(poz 1)", value="1112457398012100658"),
            disnake.SelectOption(label="Мидер(poz 2)", value="1112457564412727486"),
            disnake.SelectOption(label="Оффлейнер(poz 3)", value="1112457652954480740"),
            disnake.SelectOption(label="Роумер(poz 4)", value="1112457700937314384"),
            disnake.SelectOption(label="Саппорт(poz 5)", value="1112457751596113990")]
        super().__init__(placeholder="Select a game", options=options, custom_id="games", min_values=0, max_values=3)

    async def callback(self, interaction: disnake.MessageInteraction):
        await interaction.response.defer()
        all_roles = {1112457398012100658, 1112457564412727486, 1112457652954480740, 1112457700937314384, 1112457751596113990}
        to_remove = []
        to_add = []

        if not interaction.values:
            for role_id in all_roles:
                role = interaction.guild.get_role(role_id)
                to_remove.append(role)

            await interaction.author.remove_roles(*to_remove, reason="Removed all roles")

        else:
            chosen_roles = {int(value) for value in interaction.values}
            ids_to_remove = all_roles - chosen_roles

            for role_id in ids_to_remove:
                role = interaction.guild.get_role(role_id)
                to_remove.append(role)

            for role_id in chosen_roles:
                role = interaction.guild.get_role(role_id)
                to_add.append(role)

            await interaction.author.remove_roles(*to_remove, reason="Removed roles")
            await interaction.author.add_roles(*to_add, reason="Added roles")

class GameRoles(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.persistents_views_added = False
        self.message_id = None  # Добавленная строка для хранения идентификатора сообщения

    @commands.command()
    async def games(self, ctx):
        view = disnake.ui.View(timeout=None)
        view.add_item(SelectGames())
        embed = disnake.Embed(color = 0x2f3136)
        embed.set_author(name = "Game Roles:")
        embed.description = "Под этим постом роли,вибирай"
        embed.set_image(url="https://i.imgur.com/QzB7q9J.png")
        message = await ctx.send("Select your games", view=view)
        self.message_id = message.id  # Сохранение идентификатора сообщения

    @commands.Cog.listener()
    async def on_connect(self):
        if self.persistents_views_added:
            return

        view = disnake.ui.View(timeout=None)
        view.add_item(SelectGames())
        self.bot.add_view(view, message_id=self.message_id)  # Использование сохраненного идентификатора сообщения

def setup(bot):
    bot.add_cog(GameRoles(bot))